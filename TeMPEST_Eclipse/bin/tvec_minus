#!/bin/csh -f
#
# file: tvec_minus

if (($1 == "-help") | ($1 == "")) then

echo ' '
echo 'Usage: tvec_minus ["ddd" ["hh" ["mm" ["ss"]]]]'
echo ' '
echo 'where the time to be subtracted is given as 1 to 4 integers separated'
echo 'by blanks, with missing entries assumed to be zero.  Input times'
echo 'are taken from stdin and output is to stdout.  The output times'
echo 'are of the form:  "ddd hh mm ss".  Note that a blank line in'
echo 'a file will is treated as being all zeros.'
echo ' '

exit
endif

set delta_time = ($1 $2 $3 $4)
#assumes the input time is valid

set result = (0 0 0 0)

loop:

set input_line = $<
#assumes the input time is valid

set input_line = (`echo $input_line | awk '{print $1, $2, $3, $4}'`)
#echo 'il:'$input_line' '$#input_line

if ("$input_line" != "") then 


set input_time = (0 0 0 0)
if (${#input_line} >= 1) then
set input_time[1] = $input_line[1]
endif

#echo $#input_line'ge 1'
if (${#input_line} >= 2) then
set input_time[2] = $input_line[2]
endif

#echo $#input_line'ge 2'
if (${#input_line} >= 3) then
set input_time[3] = $input_line[3]
endif

#echo $#input_line'ge 3'
if (${#input_line} >= 4) then
set input_time[4] = $input_line[4]
endif

#echo 'it:'$input_time' '$#input_time


@ result[1] = $input_time[1] - $delta_time[1]
@ result[2] = $input_time[2] - $delta_time[2]
@ result[3] = $input_time[3] - $delta_time[3]
@ result[4] = $input_time[4] - $delta_time[4]

if ( $result[4] < 0 ) then
@ result[4] = $result[4] + 60
@ result[3] = $result[3] - 1
endif

if ( $result[3] < 0 ) then
@ result[3] = $result[3] + 60
@ result[2] = $result[2] - 1
endif

if ( $result[2] < 0 ) then 
@ result[2] = $result[2] + 24
@ result[1] = $result[1] - 1
endif

if ( $result[1] < 0 ) then
set result[1] = 999
set result[2] = 0
set result[3] = 0
set result[4] = 0
endif


#echo 'd:'"$delta_time"
#echo 'i:'"$input_time"
#echo 'r:'"$result"
#echo ' ' 


echo "$result" | awk '{ printf("%03s %02s %02s %02s\n", $1, $2, $3, $4) }' 

goto loop

endif


